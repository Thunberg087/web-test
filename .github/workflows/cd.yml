# This is a basic workflow to help you get started with Actions

name: Deploy Action

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check_version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    outputs:
      is_version_increased: ${{ steps.compare_versions.outputs.is_version_increased }}
      version: ${{ steps.package-version.outputs.version }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - run: git checkout HEAD^
    

      - name: Print package.json
        run: |
          cat package.json


      - name: get-npm-version
        id: package-version-prev
        uses: beaconbrigade/package-json-version@v0.3

      - name: Checkout
        uses: actions/checkout@v3

      - name: Print package.json
        run: |
          cat package.json

      - name: get-npm-version
        id: package-version
        uses: beaconbrigade/package-json-version@v0.3

      - name: Compare versions
        id: compare_versions
        run: |
          if [ "${{ steps.package-version-prev.outputs.version }}" == "${{ steps.package-version.outputs.version }}" ]; then
            echo "No new version, action cancelled..."
            echo "is_version_increased=false" >> "$GITHUB_OUTPUT"
          else
            echo "is_version_increased=true" >> "$GITHUB_OUTPUT"
          fi

  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: check_version
    # if: needs.check_version.outputs.is_version_increased == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            image: thunberg087/web-test
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3

      - name: Test print
        run: |
          echo "awd: ${{ needs.check_version.outputs.is_version_increased }}"


      - name: Create release
        env:
          tag: ${{ needs.check_version.outputs.version }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="üè∑Ô∏è Version ${tag#v}" \
              --generate-notes
              
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Login to Parametric Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.REGISTRY_USER }}
      #     password: ${{ secrets.REGISTRY_PASS }}

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ matrix.image }}

      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: ${{ matrix.dockerfile  }}
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }} ${{ steps.package-version.outputs.current-version}}
      #     labels: ${{ steps.meta.outputs.labels }}
